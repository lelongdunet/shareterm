#!/bin/bash

# This file is part of the shareterm project
# Copyright (C) 2011  Adrien LELONG
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#Start a shared terminal (using a screen session) on target PC
#reverse tunnel is created and temporary private key is sent to server
#to allow SSH connection as guest user

SHARETERMCFG=$HOME/.shareterm
if [ ! -f $SHARETERMCFG ]; then
    echo "You must set copnfiguration in $SHARETERMCFG"
    exit 1;
fi

SSHPORT=''
source $SHARETERMCFG

if [ -z $SSHPORT ]; then
    SSH="ssh"
else
    SSH="ssh -p$SSHPORT"
fi

SCREENCFG=/var/lib/shareterm/screenmu
#SCREENCFG=/var/lib/shareterm/screenmu
SSHKEYPATH=/tmp
SSHKEYFILE=$SSHKEYPATH/k.shareterm

#GUESTUSERNAME=guest
GUESTUSERNAME=user
GUESTUSERHOME=/home/$GUESTUSERNAME

#Create and send the key
if screen -ls|egrep '[0-9]+\.share'; then
    echo 'Screen session "share" already running!'
    exit 1
fi

ssh-keygen -P '' -f $SSHKEYFILE
sudo -u $GUESTUSERNAME mkdir -p $GUESTUSERHOME/.ssh
sudo -u $GUESTUSERNAME cp $SSHKEYFILE.pub $GUESTUSERHOME/.ssh/authorized_keys

#Get available port from server
cat $SSHKEYFILE|$SSH $NETUSER@$SHARESERV sudo -u shareterm /usr/share/shareterm/createlink > /tmp/createlink.out
if ! grep NEWPORT /tmp/createlink.out; then
    echo "Error while creating connection"
    exit 2
fi

source /tmp/createlink.out

#Open the tunnel
$SSH -NR$NEWPORT:localhost:22 $NETUSER@$SHARESERV &
SSHPID=$!


screen -S share -c $SCREENCFG

#Exited from screen
#if screen -ls|egrep '[0-9]+\.share'; then
#    read -p 'Are you sure you want to continue sharing this term? y/n'
#    if [ "$REPLY" == "y" ]; then
#        CLOSESHARE="N"
#    fi
#fi
echo 'Closing shared terminal'
sleep 1
kill $SSHPID
rm -f $SSHKEYFILE*


